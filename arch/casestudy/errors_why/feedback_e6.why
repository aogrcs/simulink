theory MyModel

  use import int.Int
  use import matrix.Matrix

  function s_A_out1 int : matrix

  function s_AplusBF_out1 int : matrix

  function s_Ax_out1 int : matrix

  function s_B_out1 int : matrix

  function s_BF_out1 int : matrix

  function s_Bu_out1 int : matrix

  function s_Compare_To_Zero_out1 int : matrix

  function s_CompareFloat_out1 int : matrix

  function s_CompareFloat_In1_out1 int : matrix

  function s_CompareFloat_In2_out1 int : matrix

  function s_CompareFloat_Abs_out1 int : matrix

  function s_CompareFloat_Compare_To_Constant2_out1 int : matrix

  function s_CompareFloat_Subtract_out1 int : matrix

  function s_F_out1 int : matrix

  function s_Fx_out1 int : matrix

  function s_G_out1 int : matrix

  function s_Gain_out1 int : matrix

  function s_Gxn_out1 int : matrix

  function s_IgnoreFirstStep_out1 int : matrix

  function s_IgnoreFirstStep_In_out1 int : matrix

  function s_IgnoreFirstStep_Clock_out1 int : matrix

  function s_IgnoreFirstStep_Compare_To_Constant_out1 int : matrix

  function s_IgnoreFirstStep_Logical_Operator_out1 int : matrix

  function s_IgnoreFirstStep1_out1 int : matrix

  function s_IgnoreFirstStep1_In_out1 int : matrix

  function s_IgnoreFirstStep1_Clock_out1 int : matrix

  function s_IgnoreFirstStep1_Compare_To_Constant_out1 int : matrix

  function s_IgnoreFirstStep1_Logical_Operator_out1 int : matrix

  function s_P_out1 int : matrix

  function s_Vdiff_out1 int : matrix

  function s_Vprev_out1 int : matrix

  function s_atpa_out1 int : matrix

  function s_atpaminusp_out1 int : matrix

  function s_isPosDef_out1 int : matrix

  function s_isPosDef_out2 int : matrix

  function s_isPosDef_M_out1 int : matrix

  function s_isPosDef_Compare_To_Zero1_out1 int : matrix

  function s_isPosDef_Interpreted_MATLAB_Function2_out1 int : matrix

  function s_isPosDef_MinMax2_out1 int : matrix

  function s_isPosDef1_out1 int : matrix

  function s_isPosDef1_out2 int : matrix

  function s_isPosDef1_M_out1 int : matrix

  function s_isPosDef1_Compare_To_Zero1_out1 int : matrix

  function s_isPosDef1_Interpreted_MATLAB_Function2_out1 int : matrix

  function s_isPosDef1_MinMax2_out1 int : matrix

  function s_v_out1 int : matrix

  function s_vdiff_an_out1 int : matrix

  function s_x_out1 int : matrix

  function s_xnext_out1 int : matrix

  function s_xprev_out1 int : matrix



namespace import N_s_A
  clone export simulink.ConstantBlock with function out1 = s_A_out1
end


namespace import N_s_AplusBF
  clone export simulink.AddBlock with function in1 = s_A_out1, function in2 = s_BF_out1, function out1 = s_AplusBF_out1
end


namespace import N_s_Ax
  clone export simulink.MultiplyBlock with function in1 = s_A_out1, function in2 = s_x_out1, function out1 = s_Ax_out1
end


namespace import N_s_B
  clone export simulink.ConstantBlock with function out1 = s_B_out1
end


namespace import N_s_BF
  clone export simulink.MultiplyBlock with function in1 = s_B_out1, function in2 = s_F_out1, function out1 = s_BF_out1
end


namespace import N_s_Bu
  clone export simulink.MultiplyBlock with function in1 = s_B_out1, function in2 = s_Fx_out1, function out1 = s_Bu_out1
end


namespace import N_s_CompareFloat_Subtract
  clone export simulink.AddBlock with function in1 = s_CompareFloat_In1_out1, function in2 = s_CompareFloat_In2_out1, function out1 = s_CompareFloat_Subtract_out1
end


namespace import N_s_F
  clone export simulink.ConstantBlock with function out1 = s_F_out1
end


namespace import N_s_Fx
  clone export simulink.MultiplyBlock with function in1 = s_F_out1, function in2 = s_x_out1, function out1 = s_Fx_out1
end


namespace import N_s_G
  clone export simulink.ConstantBlock with function out1 = s_G_out1
end


namespace import N_s_Gxn
  clone export simulink.MultiplyBlock with function in1 = s_G_out1, function in2 = s_xnext_out1, function out1 = s_Gxn_out1
end


namespace import N_s_P
  clone export simulink.ConstantBlock with function out1 = s_P_out1
end


namespace import N_s_Vdiff
  clone export simulink.SubtractBlock with function in1 = s_v_out1, function in2 = s_Vprev_out1, function out1 = s_Vdiff_out1
end


namespace import N_s_Vprev
  clone export simulink.DelayBlock with function in1 = s_v_out1, function out1 = s_Vprev_out1
end


namespace import N_s_atpa
  clone export simulink.QuadraticBlock with function in1 = s_P_out1, function in2 = s_AplusBF_out1, function out1 = s_atpa_out1
end


namespace import N_s_atpaminusp
  clone export simulink.SubtractBlock with function in1 = s_P_out1, function in2 = s_atpa_out1, function out1 = s_atpaminusp_out1
end


namespace import N_s_v
  clone export simulink.QuadraticBlock with function in1 = s_P_out1, function in2 = s_x_out1, function out1 = s_v_out1
end


namespace import N_s_vdiff_an
  clone export simulink.QuadraticBlock with function in1 = s_atpaminusp_out1, function in2 = s_xprev_out1, function out1 = s_vdiff_an_out1
end


namespace import N_s_x
  clone export simulink.DelayBlock with function in1 = s_xnext_out1, function out1 = s_x_out1
end


namespace import N_s_xnext
  clone export simulink.AddBlock with function in1 = s_Ax_out1, function in2 = s_Bu_out1, function out1 = s_xnext_out1
end


namespace import N_s_xprev
  clone export simulink.DelayBlock with function in1 = s_x_out1, function out1 = s_xprev_out1
end


goal G1: forall k : int. s_vdiff_an_out1 k = s_Vdiff_out1 k

end
